{"version":3,"sources":["components/Nav.js","components/Carousel.js","components/Home.js","components/PizzaForm.js","validation/formSchema.js","App.js","index.js"],"names":["PizzaNav","Navbar","color","dark","expand","Nav","className","navbar","NavItem","NavLink","tag","Link","to","NavbarText","items","src","altText","captionHeader","captionText","PizzaCarousel","props","useState","activeIndex","setActiveIndex","animating","setAnimating","next","nextIndex","length","previous","slides","map","item","CarouselItem","onExiting","onExited","key","alt","CarouselCaption","Carousel","CarouselIndicators","onClickHandler","newIndex","CarouselControl","direction","directionText","Home","Container","PizzaForm","values","changeForm","submit","errors","onChange","evt","target","name","value","type","checked","Form","onSubmit","preventDefault","FormGroup","Label","for","Input","id","placeholder","email","password","telNum","size","check","extraCheese","pepperoni","mushrooms","onions","specialRequests","FormText","Button","yup","shape","required","min","max","initialPizzaFormValues","initialOrders","initialFormErrors","App","formValues","setFormValues","orders","setOrders","formErrors","setFormErrors","validate","schema","then","valid","catch","err","path","exact","newOrder","axios","post","res","console","log","postNewOrder","trim","toppings","filter","top","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.3b1dcbd3.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom'\nimport {\n  Navbar,\n  Nav,\n  NavItem,\n  NavLink,\n  NavbarText\n} from 'reactstrap';\n\nexport default function PizzaNav() {\n\n    return (\n        <div>\n        <Navbar color=\"dark\" dark expand=\"md\">\n            <Nav className=\"mr-auto\" navbar>\n                <NavItem>\n                    <NavLink tag={Link} to='/'>Go home!</NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink tag={Link} to='/orderYourPizza'>Order now!</NavLink>\n                </NavItem>\n            </Nav>\n            <NavbarText>Want a Pizza me?! Come and get it.</NavbarText>\n        </Navbar>\n        </div>\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  Carousel,\n  CarouselItem,\n  CarouselControl,\n  CarouselIndicators,\n  CarouselCaption\n} from 'reactstrap';\n\nconst items = [\n  {\n    src: 'https://images.unsplash.com/photo-1513104890138-7c749659a591?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1200&q=80',\n    altText: 'Pizza How You Want It',\n    captionHeader: 'Pizza How You Want It',\n    captionText: 'Leggo'\n  },\n  {\n    src: 'https://images.unsplash.com/photo-1574071318508-1cdbab80d002?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1200&q=80',\n    altText: \"Slice 'em and dice 'em\",\n    captionHeader: \"Slice 'em and dice 'em\",\n    captionText: 'Italian Style'\n  },\n  {\n    src: 'https://images.unsplash.com/photo-1534308983496-4fabb1a015ee?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1200&q=80',\n    altText: 'Does It Get Any Cheesier',\n    captionHeader: 'Does It Get Any Cheesier',\n    captionText: 'Shake and Bake'\n  }\n];\n\nconst PizzaCarousel = (props) => {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [animating, setAnimating] = useState(false);\n\n  const next = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\n    setActiveIndex(nextIndex);\n  }\n\n  const previous = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\n    setActiveIndex(nextIndex);\n  }\n\n  const goToIndex = (newIndex) => {\n    if (animating) return;\n    setActiveIndex(newIndex);\n  }\n\n  const slides = items.map((item) => {\n    return (\n      <CarouselItem\n        onExiting={() => setAnimating(true)}\n        onExited={() => setAnimating(false)}\n        key={item.src}\n      >\n        <img src={item.src} alt={item.altText} />\n        <CarouselCaption className=\"caption-text\" captionText={item.captionText} captionHeader={item.captionHeader} />\n      </CarouselItem>\n    );\n  });\n\n  return (\n    <Carousel\n      activeIndex={activeIndex}\n      next={next}\n      previous={previous}\n    >\n      <CarouselIndicators items={items} activeIndex={activeIndex} onClickHandler={goToIndex} />\n      {slides}\n      <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={previous} />\n      <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={next} />\n    </Carousel>\n  );\n}\n\nexport default PizzaCarousel;","import React from 'react'\nimport { Container } from 'reactstrap'\nimport PizzaCarousel from './Carousel'\n\nexport default function Home() {\n    return (\n        <Container className ='home-section'>\n            <h1>Lambda Eats</h1>\n            <PizzaCarousel />\n        </Container>\n        \n    )\n}","import React from 'react'\nimport { Button, Form, FormGroup, Label, Input, FormText, Container } from 'reactstrap';\n\nexport default function PizzaForm(props) {\n\n    const { values, changeForm, submit, errors } = props\n\n    const onChange = evt => {\n        const { name, value, type, checked } = evt.target\n        const valueToUse = type === 'checkbox' ? checked : value\n        changeForm(name, valueToUse)\n    }\n\n    const onSubmit = evt => {\n        evt.preventDefault()\n        submit()\n    }\n\n  return (\n    <Container className='form-container'>\n        <h3>Order here :)</h3>\n        <Form onSubmit={onSubmit} className='form'>\n        <FormGroup>\n            <Label for=\"email\">Email</Label>\n            <Input \n                type=\"email\" \n                name=\"email\" \n                id=\"email\" \n                placeholder=\"enter your e-mail\"\n                onChange={onChange}\n                value={values.email} \n            />\n        </FormGroup>\n        <FormGroup>\n            <Label for=\"password\">Password</Label>\n            <Input \n                type=\"password\" \n                name=\"password\" \n                id=\"password\" \n                placeholder=\"enter your password\"\n                onChange={onChange}\n                value={values.password} \n            />\n        </FormGroup>\n        <FormGroup>\n            <Label for=\"telNum\">Phone Number</Label>\n            <Input \n                type=\"text\" \n                name=\"telNum\" \n                id=\"telNum\" \n                placeholder=\"enter your phone number\"\n                onChange={onChange}\n                value={values.telNum} \n            />\n        </FormGroup>\n        <FormGroup>\n            <Label for=\"size\">Select</Label>\n            <Input \n                type=\"select\" \n                name=\"size\" \n                id=\"size\"\n                onChange={onChange}\n                value={values.size}\n            >\n            <option value='Small'>Small</option>\n            <option value='Medium'>Medium</option>\n            <option value='Large'>Large</option>\n            <option value='Extra Large'>Extra Large</option>\n            </Input>\n        </FormGroup>\n        <FormGroup check className=\"topping-container\">\n            <Container className=\"topping\">\n                <Label check>\n                <Input \n                    type=\"checkbox\"\n                    name=\"extraCheese\"\n                    checked={values.extraCheese} \n                    onChange={onChange}\n                    className=\"toppings\"\n                />{' '}\n                Extra Cheese\n                </Label>\n            </Container>\n            <Container className=\"topping\">\n                <Label check>\n                    <Input\n                        type=\"checkbox\"\n                        name='pepperoni'\n                        checked={values.pepperoni}\n                        onChange={onChange}\n                    />{' '} \n                Pepperoni\n                </Label>\n            </Container>\n            <Container className=\"topping\">\n                <Label check>\n                    <Input\n                        type=\"checkbox\"\n                        name=\"mushrooms\"\n                        checked={values.mushrooms}\n                        onChange={onChange}\n                    />{' '} \n                Mushrooms\n                </Label>\n            </Container>\n            <Container className=\"topping\">\n                <Label check>\n                    <Input\n                        type=\"checkbox\"\n                        name=\"onions\"\n                        checked={values.onions}\n                        onChange={onChange}\n                    />{' '} \n                Onions\n                </Label>\n            </Container>\n        </FormGroup>\n        <FormGroup className=\"specReqBox\">\n            <Label for=\"specialRequests\">Special Requests?</Label>\n            <Input \n                type=\"textarea\" \n                name=\"specialRequests\" \n                id=\"specialRequests\" \n                onChange={onChange}\n                value={values.specialRequests}\n                className=\"specialRequests\"\n            />\n        </FormGroup>\n            <FormText color=\"muted\">\n            Thanks for choosing us! We hope you enjoy your experience and to see you again!\n            </FormText>\n\n        <Button className=\"submitButton\">Place your order!</Button>\n        <div className='errors'>\n                <div>{errors.telNum}</div>\n                <div>{errors.email}</div>\n                <div>{errors.password}</div>\n                <div>{errors.size}</div>\n             </div>\n        </Form>\n    </Container>\n  );\n}\n","import * as yup from 'yup'\n\nexport default yup.object().shape({\n  telNum: yup.string()\n    .required('Phone number is required')\n    .min(10, 'Must be a valid Phone Number')\n    .max(10, 'Must be a valid Phone Number'),\n  email: yup.string()\n    .email('Must be a valid email')\n    .required('Email is required'),\n  password: yup.string()\n    .required('Password is required')\n    .min(5, 'Password must be a minimum of 5 characters'),\n  size: yup.string()\n    .required('You must select a size'),\n  extraCheese: yup.boolean(),\n  pepperoni: yup.boolean(),\n  mushrooms: yup.boolean(),\n  onions: yup.boolean(),\n  specialRequests: yup.string(),\n})","import React, { useState } from \"react\";\nimport PizzaNav from './components/Nav'\nimport Home from './components/Home'\nimport PizzaForm from './components/PizzaForm'\nimport { Route } from 'react-router-dom';\nimport axios from 'axios'\nimport * as yup from 'yup'\nimport schema from './validation/formSchema'\n\nconst initialPizzaFormValues = {\n  email: '',\n  password: '',\n  telNum: '',\n  size: '',\n  extraCheese: false,\n  pepperoni: false,\n  mushrooms: false,\n  onions: false,\n  specialRequests: '',\n}\n\nconst initialOrders = []\n\nconst initialFormErrors = {\n  telNum: '',\n  email: '',\n  password: '',\n  size: '',\n}\n\nconst App = () => {\n\n  const [formValues, setFormValues] = useState(initialPizzaFormValues)\n  const [orders, setOrders] = useState(initialOrders)\n  const [formErrors, setFormErrors] = useState(initialFormErrors)\n\n  const changeForm = (name, value) => {\n    validate(name, value)\n    setFormValues({ ...formValues, [name] : value})\n  }\n\n  const postNewOrder = newOrder => {\n    axios.post('https://reqres.in/api/users', newOrder)\n      .then(res => {\n        console.log(res)\n        setOrders([ ...orders, newOrder])\n        setFormValues(initialPizzaFormValues)\n      })\n      .catch(err => {\n        debugger\n      })\n  }\n\n  const submitForm = () => {\n    const newOrder = {\n      email: formValues.email.trim(),\n      password: formValues.password.trim(), \n      telNum: formValues.telNum.trim(),\n      size: formValues.size,\n      toppings: [ 'extraCheese', 'pepperoni', 'mushrooms', 'onions'].filter(top => formValues[top]),\n      specialRequests: formValues.specialRequests.trim(),\n    }\n    postNewOrder(newOrder)\n  }\n\n  const validate = (name, value) => {\n    yup\n      .reach(schema, name)\n      .validate(value)\n      .then(valid => { // eslint-disable-line\n        setFormErrors({\n          ...formErrors,\n          [name]: \"\"\n        })\n      })\n      .catch(err => {\n        setFormErrors({\n          ...formErrors,\n          [name]: err.errors[0]\n        });\n      });\n  }\n\n  return (\n    <>\n      \n      <Route path='/'>\n        <PizzaNav />\n      </Route>\n    \n      <Route exact path='/'>\n        <Home />\n      </Route>\n\n      <Route path='/orderYourPizza'>\n        <PizzaForm \n          values={formValues}\n          changeForm={changeForm}\n          submit={submitForm}\n          errors={formErrors}\n        />\n      </Route>\n      \n      \n    </>\n  );\n};\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n    <Router basename={process.env.PUBLIC_URL}><App /></Router>\n    , document.getElementById(\"root\")\n    );\n"],"sourceRoot":""}